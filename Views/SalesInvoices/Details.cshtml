@using System.Security.Claims;
@model ShowroomManagement.Models.SalesInvoice

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@{
    var identity = Context.User.Identity as ClaimsIdentity;
    Account currentAccount = null;

    if (identity != null)
    {
        var accountClaims = identity.Claims;

        currentAccount = new Account()
                {
                    Username = accountClaims.FirstOrDefault(p => p.Type == ClaimTypes.NameIdentifier)?.Value,
                    Level_account = Convert.ToInt32(accountClaims.FirstOrDefault(p => p.Type == ClaimTypes.Role)?.Value)
                };

        if (currentAccount != null && (currentAccount.Username == string.Empty || currentAccount.Username == null))
        {
            currentAccount = null;
        }

        if (currentAccount != null && currentAccount.Level_account == 0)
        {
            Layout = "~/Views/Shared/_ClientHomeLayout.cshtml";
        }
    }
}

<h1>Chi tiết</h1>

<div>
    <h4>Hóa đơn bán</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ClientId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ClientId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SaleDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SaleDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.QuantitySale)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.QuantitySale)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.InSaleId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
