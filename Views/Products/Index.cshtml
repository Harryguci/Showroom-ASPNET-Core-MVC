@using System.Security.Claims;
@model IEnumerable<ShowroomManagement.Models.Products>

@{
    ViewData["Title"] = "Sản Phẩm";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{
    var identity = Context.User.Identity as ClaimsIdentity;
    Account currentAccount = null;

    if (identity != null)
    {
        var accountClaims = identity.Claims;

        currentAccount = new Account()
                {
                    Username = accountClaims.FirstOrDefault(p => p.Type == ClaimTypes.NameIdentifier)?.Value,
                    Level_account = Convert.ToInt32(accountClaims.FirstOrDefault(p => p.Type == ClaimTypes.Role)?.Value)
                };

        if (currentAccount != null && (currentAccount.Username == null || currentAccount.Username == string.Empty))
        {
            currentAccount = null;
        }
        if (currentAccount == null || currentAccount.Level_account == 0)
        {
            Layout = "~/Views/Shared/_ClientHomeLayout.cshtml";
        }
    }
}

@{
    int page = ViewBag.currentPage;
    int total = ViewBag.totalPage;
    bool hasNext = ViewBag.nextPage;
    int? trashNumber = ViewBag.trashNumber;
}

@{
    var orders = ViewBag.OrderBy;
    var ordersByDesc = ViewBag.OrderByDesc;
}


<h1>Sản phẩm</h1>

@if (currentAccount != null && currentAccount.Level_account >= 1)
{
    <p><small><a asp-controller="Products" asp-action="Trash">Thùng rác (@(trashNumber != null ? trashNumber : ""))</a></small></p>
}

<div class="d-flex">
    @if (currentAccount != null && currentAccount.Level_account >= 1)
    {
        <a asp-action="Create" class="btn btn-outline-primary d-flex justify-content-center gap-2" style="align-items: center">
            <span class="material-symbols-outlined" style="font-size: 1rem">
                add_circle
            </span>
            Tạo mới
        </a>
    }
    <a asp-action="Show" class="btn btn-outline-primary">
        <span class="material-symbols-outlined">
            grid_view
        </span>
    </a>
</div>
<div id="list-container">
    <table class="table">
        <thead>
            <tr>
                <th class="d-flex">
                    @Html.DisplayNameFor(model => model.ProductName)
                    <button class="btn p-0 m-0" onclick="HandleOrderBy('ProductName')">
                        <span class="material-symbols-outlined my-auto">
                            expand_more
                        </span>
                    </button>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PurchasePrice)
                    <button class="btn p-0 m-0" onclick="HandleOrderBy('PurchasePrice')">
                        <span class="material-symbols-outlined my-auto">
                            expand_more
                        </span>
                    </button>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SalePrice)
                    <button class="btn p-0 m-0" onclick="HandleOrderBy('SalePrice')">
                        <span class="material-symbols-outlined my-auto">
                            expand_more
                        </span>
                    </button>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                    <button class="btn p-0 m-0" onclick="HandleOrderBy('Quantity')">
                        <span class="material-symbols-outlined my-auto">
                            expand_more
                        </span>
                    </button>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                    <button class="btn p-0 m-0" onclick="HandleOrderBy('Status')">
                        <span class="material-symbols-outlined my-auto">
                            expand_more
                        </span>
                    </button>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PurchasePrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SalePrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @if (currentAccount != null && currentAccount.Level_account >= 1)
                        {
                            <a asp-action="Edit" asp-route-id="@item.Serial">
                                <span class="material-symbols-outlined">
                                    edit
                                </span>
                            </a>
                        }
                        <a asp-action="Details" asp-route-id="@item.Serial">
                            <span class="material-symbols-outlined">
                                info
                            </span>
                        </a>
                        @if (currentAccount != null && currentAccount.Level_account >= 1)
                        {
                            <a asp-action="Delete" asp-route-id="@item.Serial">
                                <span class="material-symbols-outlined">
                                    delete
                                </span>
                            </a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="pagination-container d-flex gap-1 justify-content-center">
        @for (int i = 0; i < total; i++)
        {
            @if (i + 1 == page)
            {
                <button class="btn btn-outline-primary active" disabled>@(i + 1)</button>
            }
            else if (total > 10 && i > 5 && i < 8)
            {
                <span>.</span>
            }
            else
            {
                <a class="btn btn-outline-primary"
                   asp-action="Index" asp-route-page="@(i + 1)" asp-route-orderby="@orders" asp-route-orderbydesc="@ordersByDesc">
                    @(i + 1)
                </a>
            }
        }
    </div>
</div>

@section Scripts{
    <script>
        function HandleOrderBy(asc) {
            if (!asc) return;

            var elem = document.querySelector('#list-container');
            asc = asc.toLowerCase();
            var page = @(page);

            var url = `/Products/ProductListTable?orderby=${asc}&page=${page}`;
            

            $.get(url, function (data) {
                console.log(data);
                elem.innerHTML = data;
            })
        }
        function HandleOrderByDesc(desc) {
            if (!desc) return;
            var page = @(page);

            var elem = document.querySelector('#list-container');
            desc = desc.toLowerCase();

            var url = `/Products/ProductListTable?orderbydesc=${desc}&page=${page}`;


            $.get(url, function (data) {
                console.log(data);
                elem.innerHTML = data;
            })
        }
    </script>
}